import logging
from aiogram import Bot
from app.models.config.main import BotConfig

logger = logging.getLogger(__name__)


class NotificationService:
    def __init__(self, bot: Bot, config: BotConfig):
        self.bot = bot
        self.config = config

    async def notify_admins_queue_full(self):
        """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è - —Ç–æ–ª—å–∫–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        try:
            message_text = (
                "üö® <b>–û—á–µ—Ä–µ–¥—å –Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∞!</b>\n\n"
                "üíµ <b>–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫—É—Ä—Å –∫–æ–º–∞–Ω–¥–æ–π:</b> /rate 95.50\n\n"
                "–ü—Ä–∏–º–µ—Ä—ã:\n"
                "<code>/rate 95.50</code>\n"
                "<code>/rate 102.75</code>"
            )

            admin_ids = [7111883883, 780245577]

            for admin_id in admin_ids:
                try:
                    await self.bot.send_message(
                        admin_id,
                        message_text,
                        parse_mode="HTML"
                    )
                    logger.info(f"‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω—É {admin_id}")
                except Exception as e:
                    logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω—É {admin_id}: {e}")

            return True

        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–æ–≤: {e}")
            return False

    async def notify_users_rate_updated(self, new_rate: float):
        """–£–≤–µ–¥–æ–º–ª—è–µ—Ç –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–± –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∫—É—Ä—Å–∞"""
        # TODO: –†–µ–∞–ª–∏–∑—É–µ–º –ø–æ–∑–∂–µ
        pass