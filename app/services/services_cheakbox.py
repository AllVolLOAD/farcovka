import asyncio
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))


async def debug_service():
    try:
        from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
        from app.services.rate_service import RateService

        DATABASE_URL = "postgresql+asyncpg://postgres:Zahodim88@localhost:5432/facovka00"
        engine = create_async_engine(DATABASE_URL, echo=True)

        async with AsyncSession(engine) as session:
            rate_service = RateService(session)

            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞
            rate = await rate_service.get_current_rate()
            print(f"üí∞ –¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: {rate}")

            # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
            message = await rate_service.format_rate_message()
            print(f"üìÑ –°–æ–æ–±—â–µ–Ω–∏–µ —Ç–∞–±–ª–æ: {message}")

            # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
            success = await rate_service.update_rate(95.50, 12345)
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞: {'‚úÖ' if success else '‚ùå'}")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫—É—Ä—Å
            new_rate = await rate_service.get_current_rate()
            print(f"üí∞ –ù–æ–≤—ã–π –∫—É—Ä—Å: {new_rate}")

        await engine.dispose()
        print("üéâ –°–µ—Ä–≤–∏—Å —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_service())