import asyncio
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))


async def debug_multi_rate():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –º—É–ª—å—Ç–∏-–≤–∞–ª—é—Ç–Ω—É—é —Å–∏—Å—Ç–µ–º—É"""
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç—ã –Ω–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        from app.services.multi_rate_service import MultiRateService
        from app.models.multi_rate import ExchangeRate, Base
        from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession

        print("‚úÖ –ò–º–ø–æ—Ä—Ç—ã –º—É–ª—å—Ç–∏-–≤–∞–ª—é—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ä–∞–±–æ—Ç–∞—é—Ç")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ë–î
        DATABASE_URL = "postgresql+asyncpg://postgres:Zahodim88@localhost:5432/facovka00"
        engine = create_async_engine(DATABASE_URL, echo=True)

        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –º—É–ª—å—Ç–∏-–≤–∞–ª—é—Ç
        async with engine.begin() as conn:
            await conn.run_sync(Base.metadata.create_all)
        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã –º—É–ª—å—Ç–∏-–≤–∞–ª—é—Ç–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å–æ–∑–¥–∞–Ω—ã")

        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å
        async with AsyncSession(engine) as session:
            multi_service = MultiRateService(session)

            # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
            success = await multi_service.update_rate("RUB/USD", 95.50, 96.00, 12345)
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ RUB/USD: {'‚úÖ' if success else '‚ùå'}")

            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞
            rate = await multi_service.get_rate("RUB/USD")
            print(f"üí∞ –ö—É—Ä—Å RUB/USD: {rate}")

            # –¢–µ—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ –∫—É—Ä—Å–∞
            await multi_service.update_rate("USD/USDT", 0.996, 12345)
            usd_rate = await multi_service.get_rate("USD/USDT")
            print(f"üí∞ –ö—É—Ä—Å USD/USDT: {usd_rate}")

            # –¢–µ—Å—Ç –≤—Å–µ—Ö –∫—É—Ä—Å–æ–≤
            all_rates = await multi_service.get_all_rates()
            print(f"üìä –í—Å–µ –∫—É—Ä—Å—ã: {all_rates}")

            # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
            message = await multi_service.format_multi_rate_message()
            print("üìÑ –ú—É–ª—å—Ç–∏-–≤–∞–ª—é—Ç–Ω–æ–µ —Ç–∞–±–ª–æ:")
            print(message)
            # –¢–µ—Å—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞
            success = await multi_service.update_rate("RUB/USD", 95.50, 96.00, 12345)
            print(f"üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É—Ä—Å–∞ RUB/USD: {'‚úÖ' if success else '‚ùå'}")

            # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É—Ä—Å–∞ (—Ç–µ–ø–µ—Ä—å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ—Ä—Ç–µ–∂)
            buy_rate, sell_rate = await multi_service.get_rate("RUB/USD")
            print(f"üí∞ –ö—É—Ä—Å RUB/USD: {buy_rate}/{sell_rate}")

            # –¢–µ—Å—Ç –≤—Ç–æ—Ä–æ–≥–æ –∫—É—Ä—Å–∞
            await multi_service.update_rate("USD/USDT", 0.996, 1.002, 12345)
            usd_buy, usd_sell = await multi_service.get_rate("USD/USDT")
            print(f"üí∞ –ö—É—Ä—Å USD/USDT: {usd_buy}/{usd_sell}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É (–¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
        print("\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ä—É—é —Å–∏—Å—Ç–µ–º—É...")
        from app.services.rate_service import RateService

        async with AsyncSession(engine) as session:
            old_service = RateService(session)
            old_rate = await old_service.get_current_rate()
            print(f"üí∞ –°—Ç–∞—Ä—ã–π –∫—É—Ä—Å: {old_rate}")

        await engine.dispose()
        print("\nüéâ –ú–£–õ–¨–¢–ò-–í–ê–õ–Æ–¢–ù–ê–Ø –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –†–ê–ë–û–¢–ï!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()



if __name__ == "__main__":
    asyncio.run(debug_multi_rate())