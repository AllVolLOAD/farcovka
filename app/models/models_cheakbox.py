import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))


async def debug_models():
    """–ü—Ä–æ—Å—Ç–æ–π –¥–µ–±–∞–≥ –º–æ–¥–µ–ª–µ–π"""
    try:
        from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
        from app.models.rate import CurrentRate, Base

        # URL –∏–∑ —Ç–≤–æ–µ–≥–æ alembic.ini - –ü–†–û–í–ï–†–¨ –ü–ê–†–û–õ–¨!
        DATABASE_URL = "postgresql+asyncpg://postgres:Zahodim88@localhost:5432/facovka00"

        print("üîå –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î...")
        engine = create_async_engine(DATABASE_URL, echo=True)

        print("üì¶ –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã...")
        async with engine.begin() as conn:
            await conn.run_sync(Base.metadata.create_all)

        print("‚úÖ –¢–∞–±–ª–∏—Ü—ã —Å–æ–∑–¥–∞–Ω—ã!")

        await engine.dispose()
        print("üéâ –í—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç!")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_models())