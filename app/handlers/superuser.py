import logging
import traceback
from aiogram import Dispatcher, Router
from aiogram.filters import Command
from aiogram.types import Message
from sqlalchemy.ext.asyncio import AsyncSession

from app.models.config.main import BotConfig
from app.dao.holder import HolderDao

logger = logging.getLogger(__name__)


def setup_superuser(dp: Dispatcher, bot_config: BotConfig):
    logger.info("üîß Setting up superuser handlers...")

    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        superusers_list = [7111883883, 780245577]  # –¢–≤–æ–π ID

        logger.info(f"üîç Superusers list: {superusers_list}")

        from app.filters.superusers import SuperuserFilter
        router = Router(name=__name__)
        router.message.filter(SuperuserFilter(superusers_list))  # –ü–µ—Ä–µ–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ ID

        @router.message(Command("superuser_test"))
        async def superuser_test(message: Message):
            await message.answer(f"üîß Superuser test OK! Your ID: {message.from_user.id}")

        @router.message(Command("stats"))
        async def show_stats(message: Message, session: AsyncSession = None):
            """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
            try:
                if session is None:
                    stats_text = """üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: —Å–∏—Å—Ç–µ–º–∞ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç—Å—è
üí¨ –ß–∞—Ç–æ–≤: –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–∞–µ—Ç—Å—è
üìã –í –æ—á–µ—Ä–µ–¥–∏: —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≥–æ—Ç–æ–≤

‚ö° –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"""
                else:
                    # –°–æ–∑–¥–∞–µ–º DAO –∏–∑ —Å–µ—Å—Å–∏–∏
                    from app.dao.holder import HolderDao
                    dao = HolderDao(session)

                    try:
                        users_count = await dao.user.get_users_count()
                        chats_count = await dao.chat.get_chats_count()
                        queue_count = await dao.queue.get_active_queue_count()

                        stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {users_count}
üí¨ –ß–∞—Ç–æ–≤: {chats_count}
üìã –í –æ—á–µ—Ä–µ–¥–∏: {queue_count}
‚ö° –í–µ—Ä—Å–∏—è: 1.0.0"""
                    except Exception as db_error:
                        stats_text = f"""üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–æ—Ç–∞:

‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {db_error}
‚ö° –û–±—Ä–∞—Ç–∏—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É"""

                await message.answer(stats_text)

            except Exception as e:
                await message.answer(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
                logger.error(f"Stats error: {e}")

        dp.include_router(router)
        logger.info("‚úÖ Superuser handlers setup completed")

    except Exception as e:
        logger.error(f"‚ùå SUPERUSER SETUP ERROR: {e}")
        logger.error(f"üîç FULL TRACEBACK:\n{traceback.format_exc()}")
        raise