import asyncio
import sys
import os

sys.path.append(os.path.dirname(os.path.abspath(__file__)))


async def debug_handlers_simple():
    """–ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ handlers"""
    try:
        from aiogram import Dispatcher
        from app.handlers.rate import setup_rate

        # –ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –Ω–∞—à router –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç—Å—è
        dp = Dispatcher()
        setup_rate(dp)

        print("‚úÖ –ù–∞—à rate router –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
        print(f"üìã –í—Å–µ–≥–æ routers: {len(dp.include_routers)}")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ –Ω–∞—à handler
        for router in dp.include_routers:
            if 'rate' in router.name:
                print(f"üéØ –ù–∞–π–¥–µ–Ω rate router: {router.name}")
                for handler in router.message.handlers:
                    print(f"   - Handler: {handler}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()


if __name__ == "__main__":
    asyncio.run(debug_handlers_simple())