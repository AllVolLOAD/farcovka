import asyncio
from sqlalchemy.ext.asyncio import create_async_engine
from sqlalchemy import text


async def check_database():
    db_url = "postgresql+asyncpg://postgres:Zahodim88@localhost:5432/facovka00"
    engine = create_async_engine(db_url)

    async with engine.connect() as conn:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É
        print("1. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—É user_stats...")
        result = await conn.execute(text("SELECT COUNT(*) FROM user_stats"))
        count = result.scalar()
        print(f"   ‚úÖ –ó–∞–ø–∏—Å–µ–π –≤ user_stats: {count}")

        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        print("2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã...")
        result = await conn.execute(text("""
            SELECT column_name, data_type 
            FROM information_schema.columns 
            WHERE table_name = 'user_stats'
        """))
        print("   üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ user_stats:")
        for col_name, data_type in result:
            print(f"      {col_name}: {data_type}")

        # 3. –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–ø–∏—Å—å
        print("3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏...")
        await conn.execute(text("""
            INSERT INTO user_stats (user_id, action) 
            VALUES (123456, 'test')
        """))
        await conn.commit()

        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ
        result = await conn.execute(text("SELECT COUNT(*) FROM user_stats"))
        count = result.scalar()
        print(f"   ‚úÖ –¢–µ–ø–µ—Ä—å –∑–∞–ø–∏—Å–µ–π: {count}")

    await engine.dispose()
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


if __name__ == "__main__":
    asyncio.run(check_database())